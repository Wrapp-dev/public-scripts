$(document).ready(function(){const defaultMarqueeSettings={direction:'left',speed:100,pauseOnHover:!1,};$('[data-wr-marquee]').each(function(){const marquee=$(this);const uniqueId=`marquee-${Math.random().toString(36).substr(2, 9)}`;const settings={...defaultMarqueeSettings,direction:marquee.data('wr-direction')||defaultMarqueeSettings.direction,speed:parseFloat(marquee.data('wr-speed'))||defaultMarqueeSettings.speed,pauseOnHover:marquee.data('wr-pause-on-hover')!==undefined?!0:defaultMarqueeSettings.pauseOnHover,};const animationDirection=settings.direction==='left'?'-':'';const interactions=marquee.data('wr-interactions')!==undefined?!0:!1;const innerContainer=$('<div class="marquee-inner"></div>');innerContainer.append(marquee.children().clone(!0));marquee.empty().append(innerContainer);marquee.css({display:'flex',overflow:'hidden',});innerContainer.css({display:'flex',gap:'inherit',width:'max-content',});const updateMarquee=()=>{if(!marquee.is(':visible')){return}
const marqueeWidth=marquee.outerWidth();let contentWidth=innerContainer[0].scrollWidth;while(contentWidth<marqueeWidth*2){innerContainer.append(innerContainer.children().clone(!0));contentWidth=innerContainer[0].scrollWidth}
if(interactions)Webflow.require('ix2').init();const totalContentWidth=innerContainer[0].scrollWidth;const duration=(totalContentWidth/settings.speed)*1000;const keyframes=`@keyframes ${uniqueId} {
         from {
           transform: translateX(${settings.direction === 'left' ? 0 : -totalContentWidth / 2}px);
         }
         to {
           transform: translateX(${settings.direction === 'left' ? -totalContentWidth / 2 : 0}px);
         }
       }`;const styleTag=$(`<style id="${uniqueId}-style"></style>`).text(keyframes);$(`head #${uniqueId}-style`).remove();$('head').append(styleTag);innerContainer.css({animation:`${uniqueId} ${duration}ms linear infinite`,});if(settings.pauseOnHover){marquee.on('mouseenter',function(){innerContainer.css('animation-play-state','paused')});marquee.on('mouseleave',function(){innerContainer.css('animation-play-state','running')})}};const observer=new MutationObserver((mutations)=>{mutations.forEach((mutation)=>{if(mutation.attributeName==='style'){updateMarquee()}})});observer.observe(marquee[0],{attributes:!0,attributeFilter:['style'],});updateMarquee();$(window).on('resize',updateMarquee)})})
